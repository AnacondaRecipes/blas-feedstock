{% set version = "3.8.0" %}
{% set build_num = "0" %}
{% set version_major = version.split(".")[0] %}
{% set blas_major = "2" %}

{% set libblas_impl = blas_impl %}
{% set libblas_impl = "mkl_rt" %}        # [blas_impl == 'mkl']
{% set libblas_impl = "libblis.2" %}     # [blas_impl == 'blis' and win]

# blas_major denotes major infrastructural change to how blas is managed
package:
  name: blas-split
  version: "{{ version }}"

build:
  number: "{{ build_num }}"
  script:
  {% for each_lib in ['blas', 'cblas', 'lapack', 'lapacke'] %}
    - copy "%LIBRARY_BIN%\\{{ libblas_impl }}.dll" "%LIBRARY_BIN%\\lib{{ each_lib }}.dll"                       # [win]
    - ln -s $PREFIX/lib/lib{{ libblas_impl }}.so $PREFIX/lib/lib{{ each_lib }}.so.{{ version_major }}           # [linux]
    - ln -s $PREFIX/lib/lib{{ libblas_impl }}.dylib $PREFIX/lib/lib{{ each_lib }}.{{ version_major }}.dylib     # [osx]
  {% endfor %}

requirements:
  host:
    - openblas 0.3.3   # [blas_impl == 'openblas']
    - mkl 2019.1       # [blas_impl == 'mkl']
    - blis 0.5.1       # [blas_impl == 'blis']

outputs:
  - name: libblas
    build:
      string: "{{ build_num }}_{{ blas_impl }}"
      run_exports:
        - {{ pin_subpackage("libblas", max_pin="x") }}
      track_features:
       - blas_{{ blas_impl }}     # [blas_impl != blas_default_impl]
    requirements:
      host:
        - openblas 0.3.3   # [blas_impl == 'openblas']
        - mkl 2019.1       # [blas_impl == 'mkl']
        - blis 0.5.1       # [blas_impl == 'blis']
      run:
        - openblas 0.3.3   # [blas_impl == 'openblas']
        - mkl 2019.1       # [blas_impl == 'mkl']
        - blis 0.5.1       # [blas_impl == 'blis']
      run_constrained:
        - {{ pin_subpackage("libcblas", exact=True) }}
        - {{ pin_subpackage("liblapack", exact=True) }}    # [blas_impl != 'blis']
        - {{ pin_subpackage("liblapacke", exact=True) }}   # [blas_impl != 'blis']
    files:
      - lib/libblas.so.{{ version_major }}      # [linux]
      - lib/libblas.{{ version_major }}.dylib   # [osx]
      - Library/bin/libblas.dll                 # [win]

  - name: libcblas
    build:
      string: "{{ build_num }}_{{ blas_impl }}"
      run_exports:
        - {{ pin_subpackage("libcblas", max_pin="x") }}
      track_features:
       - blas_{{ blas_impl }}     # [blas_impl != blas_default_impl]
    requirements:
      host:
        - {{ pin_subpackage("libblas", exact=True) }}
      run:
        - {{ pin_subpackage("libblas", exact=True) }}
      run_constrained:
        - {{ pin_subpackage("liblapack", exact=True) }}    # [blas_impl != 'blis']
        - {{ pin_subpackage("liblapacke", exact=True) }}   # [blas_impl != 'blis']
    files:
      - lib/libcblas.so.{{ version_major }}      # [linux]
      - lib/libcblas.{{ version_major }}.dylib   # [osx]
      - Library/bin/libcblas.dll                 # [win]

  {% if blas_impl != 'blis' %}
  - name: liblapack
    build:
      string: "{{ build_num }}_{{ blas_impl }}"
      run_exports:
        - {{ pin_subpackage("liblapack", max_pin="x.x") }}
      track_features:
       - blas_{{ blas_impl }}     # [blas_impl != blas_default_impl]
    requirements:
      host:
        - {{ pin_subpackage("libblas", exact=True) }}
      run:
        - {{ pin_subpackage("libblas", exact=True) }}
      run_constrained:
        - {{ pin_subpackage("libcblas", exact=True) }}
        - {{ pin_subpackage("liblapacke", exact=True) }}
    files:
      - lib/liblapack.so.{{ version_major }}      # [linux]
      - lib/liblapack.{{ version_major }}.dylib   # [osx]
      - Library/bin/liblapack.dll                 # [win]

  - name: liblapacke
    build:
      string: "{{ build_num }}_{{ blas_impl }}"
      run_exports:
        - {{ pin_subpackage("liblapacke", max_pin="x.x") }}
      track_features:
       - blas_{{ blas_impl }}     # [blas_impl != blas_default_impl]
    requirements:
      - {{ pin_subpackage("libblas", exact=True) }}
      - {{ pin_subpackage("libcblas", exact=True) }}
      - {{ pin_subpackage("liblapack", exact=True) }}
    files:
      - lib/liblapacke.so.{{ version_major }}      # [linux]
      - lib/liblapacke.{{ version_major }}.dylib   # [osx]
      - Library/bin/liblapacke.dll                 # [win]
  {% endif %}

  # For compatiblity
  - name: blas
    version: "{{ blas_major }}.{{ build_num }}"
    build:
      string: "{{ blas_impl }}"
    requirements:
      run:
        - {{ pin_subpackage("liblapack", exact=True) }}      # [blas_impl != 'blis']
        - {{ pin_subpackage("liblapacke", exact=True) }}     # [blas_impl != 'blis']
        - liblapack  {{ version }} *netlib                   # [blas_impl == 'blis']
        - liblapacke {{ version }} *netlib                   # [blas_impl == 'blis']
        - {{ pin_subpackage("libcblas", exact=True) }}
        - {{ pin_subpackage("libblas", exact=True) }}

about:
  home: https://github.com/conda-forge/blas-feedstock
  license: BSD 3-clause
  summary: Metapackage to select the BLAS variant. Use conda's pinning mechanism in your environment to control which variant you want.

extra:
  recipe-maintainers:
    - jakirkham
    - pelson
    - isuruf
